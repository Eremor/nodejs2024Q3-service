datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id String @id @default(uuid())
  login String @unique
  password String
  version Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Artist {
  id String @id @default(uuid())
  name String
  grammy Boolean

  albums Album[]
  tracks Track[]

  favoriteArtist FavoriteArtist?

  @@map("artists")
}

model Album {
  id String @id @default(uuid())
  name String
  year Int

  artistId String?
  artist Artist? @relation(fields: [artistId], references: [id])
  favoriteAlbum FavoriteAlbum?

  tracks Track[]

  @@map("albums")
}

model Track {
  id String @id @default(uuid())
  name String
  artistId String?
  albumId String?
  duration Int

  artist Artist? @relation(fields: [artistId], references: [id])
  album Album? @relation(fields: [albumId], references: [id])
  favoriteTrack FavoriteTrack?

  @@map("tracks")
}

model FavoriteTrack {
  id String @id @default(uuid())
  track Track @relation(fields: [trackId], references: [id], onDelete: Cascade)
  trackId String @unique
}

model FavoriteAlbum {
  id String @id @default(uuid())
  album Album @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId String @unique
}

model FavoriteArtist {
  id String @id @default(uuid())
  artist Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId String @unique
}